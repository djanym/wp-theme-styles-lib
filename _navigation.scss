@charset "UTF-8";

@use "../vars";
@use "mixins" as mx;
@import "bootstrap-required";

$item-dropdown-arrow: if(vars.$navbar-item-dropdown-arrow, vars.$navbar-item-dropdown-arrow, false); // Adds arrow to the menu item if it has a dropdown.
$top-link-spacing-x: if(vars.$navbar-top-link-spacing-x, vars.$navbar-top-link-spacing-x, 1px); // Horizontal spacing around the top <a> links.
$top-link-spacing-y: if(vars.$navbar-top-link-spacing-y, vars.$navbar-top-link-spacing-y, 1px); // Vertical spacing around the top <a> links.
$top-items-gap: if(vars.$navbar-top-items-gap, vars.$navbar-top-items-gap, false); // Gap between the top <li> items.

// Background color of the <li> item on hover.
$top-li-bg-color: if(vars.$navbar-top-li-bg-color, vars.$navbar-top-li-bg-color, false);
// Background color of the <li> item on hover.
$top-li-bg-color-hover: if(vars.$navbar-top-li-bg-color-hover, vars.$navbar-top-li-bg-color-hover, false);
// Background color of the <li> item on active.
$top-li-bg-color-active: if(vars.$navbar-top-li-bg-color-active, vars.$navbar-top-li-bg-color-active, false);
// Background color of the current (active) item or its parent.
$top-li-bg-color-current: if(vars.$navbar-top-li-bg-color-current, vars.$navbar-top-li-bg-color-current, false);

// checks from vars, then from bootstrap, then default.
$link-color: if(vars.$navbar-item-link-color, vars.$navbar-item-link-color, #0022AA);
$link-hover-color: if(vars.$navbar-item-link-hover-color, vars.$navbar-item-link-hover-color, #000088);
$link-active-color: if(vars.$navbar-item-link-active-color, vars.$navbar-item-link-active-color, #0055AA);
$link-current-color: if(vars.$navbar-item-link-current-color, vars.$navbar-item-link-current-color, #0055AA);

$link-decoration: if(vars.$navbar-item-link-decoration, vars.$navbar-item-link-decoration, none);
$link-hover-decoration: if(vars.$navbar-item-link-hover-decoration, vars.$navbar-item-link-hover-decoration, false);
$link-active-decoration: if(vars.$navbar-item-link-active-decoration, vars.$navbar-item-link-active-decoration, false);
$link-current-decoration: if(vars.$navbar-item-link-current-decoration, vars.$navbar-item-link-current-decoration, false);

$link-weight: if(vars.$navbar-item-link-weight, vars.$navbar-item-link-weight, normal);
$link-hover-weight: if(vars.$navbar-item-link-hover-weight, vars.$navbar-item-link-hover-weight, false);
$link-active-weight: if(vars.$navbar-item-link-active-weight, vars.$navbar-item-link-active-weight, false);
$link-current-weight: if(vars.$navbar-item-link-current-weight, vars.$navbar-item-link-current-weight, false);

$submenu-bg-color: if(vars.$navbar-submenu-bg-color, vars.$navbar-submenu-bg-color, false);

%link {
    @if $link-color {
        color: $link-color;
    }
    @if $link-decoration {
        text-decoration: $link-decoration;
    }
    @if $link-weight {
        text-decoration: $link-weight;
    }
}

%link-hover {
    @if $link-hover-color {
        color: $link-hover-color;
    }
    @if $link-hover-decoration {
        text-decoration: $link-hover-decoration;
    }
    @if $link-hover-weight {
        text-decoration: $link-hover-weight;
    }
}

%link-active {
    @if $link-active-color {
        color: $link-active-color;
    }
    @if $link-active-decoration {
        text-decoration: $link-active-decoration;
    }
    @if $link-active-weight {
        text-decoration: $link-active-weight;
    }
}

%link-current {
    @if $link-current-color {
        color: $link-current-color;
    }
    @if $link-current-decoration {
        text-decoration: $link-current-decoration;
    }
    @if $link-current-weight {
        text-decoration: $link-current-weight;
    }
}

// Adds styles for the main navigation
// Uses variables from the _vars.scss file
@mixin enable-nav-bar() {
    .navbar-nav {
        padding: 0;
        margin: 0;
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        align-items: center;

        @if $top-items-gap {
            gap: $top-items-gap;
        }

        @if vars.$navbar-bg-color {
            background-color: vars.$navbar-bg-color;
        }

        @include mx.breakpoint-max(vars.$navbar-mobile) {
            @if vars.$navbar-mobile-items-align {
                align-items: vars.$navbar-mobile-items-align;
            }

            //flex-direction: column;
            //width: 100%;
            //@include padding(1rem);
        }

        a {
            @extend %link;
        }

        // (Top level) Main navigation menu items
        > li {
            @if $top-li-bg-color {
                background-color: $top-li-bg-color;
            }

            white-space: nowrap;

            @include mx.breakpoint-max(vars.$navbar-mobile) {
                white-space: normal;
            }

            &:hover {
                @if $top-li-bg-color-hover {
                    background-color: $top-li-bg-color-hover;
                }
            }

            &:active {
                @if $top-li-bg-color-active {
                    background-color: $top-li-bg-color-active;
                }
            }

            &.current-menu-parent,
            &.current-menu-item {
                @if $top-li-bg-color-current {
                    background-color: $top-li-bg-color-current;
                }

                > a {
                    @extend %link-current;
                }
            }

            // First level sub menu <ul>
            > .sub-menu {
                top: 100%;
            }

            // Only main navigation menu <a> items
            > a {
                @extend %link;
            }
        }

        // All menu <li> items.
        .menu-item {
            display: flex;
            position: relative;
            list-style: none;
            @include font-size(vars.$navbar-font-size);
            font-weight: normal;

            @include mx.breakpoint-less-than(vars.$small-laptop) {
                @include font-size(vars.$navbar-font-size * .9);
            }

            @include mx.breakpoint-greater-than(vars.$navbar-mobile) {
                &:hover > .sub-menu {
                    display: flex;
                }
            }

            &:focus,
            &:hover {
                position: relative;
            }

            &.current-menu-parent,
            &.current-menu-item {
                > a {
                    @extend %link-current;
                }
            }

            // Adds arrow to the menu item if it has a dropdown.
            @if $item-dropdown-arrow == true {
                &.menu-item-has-children > a::after {
                    content: '';
                    display: inline-block;
                    position: relative;
                    border-style: solid;
                    border-width: 1px 1px 0 0;
                    height: 6px;
                    width: 6px;
                    margin-left: 10px;
                    top: -3px;
                    transform: rotate(135deg);
                }
            }

            // All menu item <a> links.
            a {
                @include padding($top-link-spacing-y $top-link-spacing-x);
                @extend %link;

                &:hover {
                    @extend %link-hover;
                }

                &:active {
                    @extend %link-active;
                }
            }
        }

        // Sub menu <ul>.
        .sub-menu {
            display: flex;
            flex-direction: column;
            width: fit-content;
            justify-content: flex-start;
            flex-wrap: wrap;
            overflow: visible;
            //margin: 0;

            @include padding(vars.$navbar-submenu-container-spacing-y vars.$navbar-submenu-container-spacing-x);

            background-color: vars.$navbar-submenu-bg-color;

            // For non-mobile
            @include mx.breakpoint-greater-than(vars.$navbar-mobile) {
                display: none;
                position: absolute;
                z-index: 99;
                left: 0;
                align-content: flex-start;

                // Show sub menu on right on hover
                li:hover > .sub-menu {
                    top: 0;
                    left: 100%;
                }
            }

            // Only sub menu <li> items
            li {
                flex: 1; // makes the sub menu items equal width
                white-space: nowrap;

                @if vars.$navbar-submenu-item-bg-color {
                    background-color: vars.$navbar-submenu-item-bg-color;
                }

                @if vars.$navbar-submenu-item-font-color {
                    color: vars.$navbar-submenu-item-font-color;
                }

                @if vars.$navbar-submenu-item-font-weight {
                    font-weight: vars.$navbar-submenu-item-font-weight;
                }

                &:hover {
                    @if vars.$navbar-submenu-item-bg-color-hover {
                        background-color: vars.$navbar-submenu-item-bg-color-hover;
                    }

                    @if vars.$navbar-submenu-item-font-weight-hover {
                        font-weight: vars.$navbar-submenu-item-font-weight-hover;
                    }
                }

                a {
                    @if vars.$navbar-submenu-item-font-color {
                        color: vars.$navbar-submenu-item-font-color;
                    }

                    @include padding(vars.$navbar-submenu-item-spacing-y vars.$navbar-submenu-item-spacing-x);

                    @include mx.breakpoint-max(vars.$navbar-mobile) {
                        //display: inline-block;
                        //@include padding(vars.$navbar-mobile-submenu-item-spacing-y vars.$navbar-submenu-item-spacing-x);
                        //vertical-align: top;
                    }
                }
            }
        }

        // Seems like this is not used. NavWalker is not using this class name anymore.
        .nav-item {

            .nav-link {
                @extend %link;

                padding: .3rem .9rem;

                &:hover {
                    @extend %link-hover;
                }

                &:hover {
                    @extend %link-active;
                }

                &:focus {
                    background-color: inherit;
                }

                &.dropdown-toggle::after {
                    margin-left: 0;
                    border: none;
                }
            }

            // Actual active nav item.
            &.current_page_item,
            &.current-menu-item,
            &.current-menu-parent {
                > a {
                    @extend %link-current;
                }
            }

            // Drop down menu on hover styles
            &.dropdown:hover {
                > a {
                    @extend %link-hover;
                }
            }
        }

        // Main nav item links end

        // Drop down menu start here
        > .dropdown-menu {
            @if $submenu-bg-color {
                background-color: $submenu-bg-color;
            }

            @include margin(-1px false false 13px);
            top: 100%;

            min-width: 250px;
            border-radius: 0;
            border: none;
            padding: 0.7rem 1.3rem;
            opacity: .95;
            z-index: 10;
            flex-direction: column;
            flex-wrap: wrap;
            width: auto;

            li {
                text-transform: none;
                padding: .2rem 0;
                list-style: disc;
                margin-left: 7px;
                color: white;

                &::marker {
                    color: white;
                    font-size: 1rem;
                }

                &.current-menu-item a {
                    @extend %link-current;
                }

                a {
                    @extend %link;

                    padding: 0;
                    white-space: normal;

                    &:hover {
                        @extend %link-hover;
                    }

                    &:active {
                        @extend %link-active;
                    }
                }
            }
        }
    }
    // Main navigation menu end

    // Everything related to mobile navigation.
    @include mx.breakpoint-max(vars.$navbar-mobile) {
        .navbar-mobile-active {
            .navbar-mobile {
                display: block;
                left: 0;
            }
        }

        .navbar-mobile {
            position: fixed;
            top: 0;
            left: -105%;
            height: 100vh;
            width: 100%;
            max-width: 100vw;
            padding-bottom: 1rem;
            overflow-x: hidden;
            overflow-y: scroll;
            //flex-direction: column;
            //align-items: center;
            transition: all 0.3s ease-in-out;
            z-index: 3000;
            background-color: vars.$navbar-mobile-bg-color;

            &.navbar-mobile-active {
                display: block;
                left: 0;
                @if vars.$navbar-mobile-width {
                    width: vars.$navbar-mobile-width;
                }
            }

            .navbar-nav {
                flex-direction: column;
                align-content: flex-start;
                width: 100%;

                @if vars.$navbar-mobile-items-gap {
                    gap: vars.$navbar-mobile-items-gap;
                }

                @if vars.$navbar-mobile-items-spacing-x {
                    @include padding-right(vars.$navbar-mobile-items-spacing-x);
                    @include padding-left(vars.$navbar-mobile-items-spacing-x);
                }

                @if vars.$navbar-mobile-items-spacing-y {
                    @include padding-top(vars.$navbar-mobile-items-spacing-y);
                    @include padding-bottom(vars.$navbar-mobile-items-spacing-y);
                }

                // Main navigation menu items
                > li {
                    // Only main navigation menu <a> items
                    > a {
                        color: vars.$navbar-mobile-item-font-color;
                    }
                }

                // All menu items
                .menu-item {
                    display: list-item;
                    width: 100%;

                    &.active {
                        // Show only primary child.
                        > .sub-menu {
                            display: flex;
                            flex-direction: column;

                            @if vars.$navbar-mobile-submenu-items-gap {
                                gap: vars.$navbar-mobile-submenu-items-gap;
                            }
                        }
                    }

                    &.dropdown {
                        // Adds arrow to the menu item if it has a dropdown.
                        > a {
                            position: relative;
                            display: flex;
                            flex-direction: row;
                            align-items: center;
                            justify-content: space-between;

                            &::after {
                                content: "";
                                display: inline-block;
                                width: 10px;
                                height: 10px;
                                border: solid black;
                                border-width: 0 2px 2px 0;
                                transform: rotate(45deg) translateX(-100%) translateY(75%);
                                transition: transform 0.3s ease;
                            }
                        }

                        &.active {
                            > a {
                                &::after {
                                    transform: rotate(-135deg) translateX(75%) translateY(-100%);
                                }
                            }
                        }
                    }

                    // All menu item <a> links
                    a {
                        display: block;

                        @if vars.$navbar-mobile-item-spacing-x {
                            @include padding-right(vars.$navbar-mobile-item-spacing-x);
                            @include padding-left(vars.$navbar-mobile-item-spacing-x);
                        }

                        @if vars.$navbar-mobile-item-spacing-y {
                            @include padding-top(vars.$navbar-mobile-item-spacing-y);
                            @include padding-bottom(vars.$navbar-mobile-item-spacing-y);
                        }

                    }
                }

                // Sub menu <ul>
                .sub-menu {
                    display: none;

                    @if vars.$navbar-mobile-submenu-container-spacing-y {
                        @include mx.padding-top(vars.$navbar-mobile-submenu-container-spacing-y);
                        @include mx.padding-bottom(vars.$navbar-mobile-submenu-container-spacing-y);
                    }

                    @if vars.$navbar-mobile-submenu-container-spacing-x {
                        @include mx.padding-right(vars.$navbar-mobile-submenu-container-spacing-x);
                        @include mx.padding-left(vars.$navbar-mobile-submenu-container-spacing-x);
                    }

                    // Only sub menu <li> items
                    li {
                        display: list-item;
                        width: 100%;
                        white-space: normal;

                        a {
                            display: inline-block;

                            @if vars.$navbar-mobile-submenu-item-spacing-y {
                                @include mx.padding-top(vars.$navbar-mobile-submenu-item-spacing-y);
                                @include mx.padding-bottom(vars.$navbar-mobile-submenu-item-spacing-y);
                            }

                            @if vars.$navbar-mobile-submenu-item-spacing-x {
                                @include mx.padding-right(vars.$navbar-mobile-submenu-item-spacing-x);
                                @include mx.padding-left(vars.$navbar-mobile-submenu-item-spacing-x);
                            }

                            vertical-align: top;
                        }
                    }
                }

                // Main nav item links end
            }
        }
    }
    // End of mobile navigation

    .navbar-mobile-header {
        display: flex;
        flex-direction: row;
        align-items: center;
        @include padding(1rem);

        @include mx.breakpoint-greater-than(vars.$navbar-mobile) {
            display: none;
        }

        .navbar-closer {
            align-self: start;
            @include margin-left(auto);
        }

        .site-logo img {
            max-height: rfs-value(50px);
        }
    }

    // Mobile nav button
    .navbar-menu-toggler-container {
        @include padding(vars.$navbar-mobile-toggler-padding);
        display: none;
        position: relative;

        // Show only for the mobile.
        @include mx.breakpoint-max(vars.$navbar-mobile) {
            display: block;
        }

        @include mx.breakpoint-max(vars.$mobile) {
            margin-left: auto;
            padding-right: 0;
        }

        // Styling of the button.
        .toggler-button {
            $lines-width: calc(#{vars.$navbar-mobile-toggler-width} - (#{vars.$navbar-mobile-toggler-padding}));

            vertical-align: middle;

            &:hover {
                @if vars.$navbar-mobile-toggler-bg-color-hover {
                    background-color: vars.$navbar-mobile-toggler-bg-color-hover !important;
                }

                .lines {
                    @if vars.$navbar-mobile-toggler-line-color-hover {
                        background-color: vars.$navbar-mobile-toggler-line-color-hover !important;
                    }

                    &::before,
                    &::after {
                        @if vars.$navbar-mobile-toggler-line-color-hover {
                            background-color: vars.$navbar-mobile-toggler-line-color-hover !important;
                        }
                    }
                }
            }

            position: relative;
            display: inline-block;
            width: vars.$navbar-mobile-toggler-width;
            height: vars.$navbar-mobile-toggler-height;

            @if vars.$navbar-mobile-toggler-bg-color {
                background-color: vars.$navbar-mobile-toggler-bg-color;
            }

            @if vars.$navbar-mobile-toggler-border {
                border: vars.$navbar-mobile-toggler-border;
            }

            @if vars.$navbar-mobile-toggler-border-radius {
                @include border-radius(vars.$navbar-mobile-toggler-border-radius);
            }

            cursor: pointer;

            // Styling of the lines.
            .lines {
                content: '';
                position: absolute;
                width: $lines-width;
                height: vars.$navbar-mobile-toggler-line-height;
                background-color: vars.$navbar-mobile-toggler-line-color;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                transition: 0.1s;

                &::before,
                &::after {
                    content: '';
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    background-color: vars.$navbar-mobile-toggler-line-color;
                    transition: 0.1s;
                }

                &::before {
                    transform: translate(-50%, -8px);
                }

                &::after {
                    transform: translate(-50%, 8px);
                }
            }
        }
    }

    .navbar-closer {
        position: relative;
        width: mx.rfs-value(vars.$navbar-mobile-closer-width);
        height: mx.rfs-value(vars.$navbar-mobile-closer-height);
        background-color: transparent;
        border: none;
        cursor: pointer;

        &::before,
        &::after {
            content: '';
            position: absolute;
            width: vars.$navbar-mobile-closer-line-height;
            height: 20px;
            background-color: vars.$navbar-mobile-closer-line-color;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        &::before {
            transform: translate(-50%, -50%) rotate(45deg);
        }

        &::after {
            transform: translate(-50%, -50%) rotate(-45deg);
        }
    }
}



